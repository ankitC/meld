
type route edge(node, node, int).
type linear path(node, int, int).
type linear dest(node).

const finalnode = @4.
const startnode = @1.
const used = 1.
const notused = 0.

!edge(@1, @3, 4).
!edge(@1, @2, 1).
!edge(@2, @4, 1).
!edge(@3, @4, 1).

dest(finalnode).

dest(A) -o
   {B, W | !edge(B, A, W) | path(B, W, notused)}.

path(A, B1, X), path(A, B2, Y), B1 < B2
   -o path(A, B1, X).

path(A, D, notused), A <> startnode
   -o {B, W | !edge(B, A, W) | path(B, D + W, 0)}, path(A, D, used).

